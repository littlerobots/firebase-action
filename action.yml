name: "Firebase"
description: "Sets up firebase tools"
inputs:
  serviceAccount:
    description: "Service account json file to use for authentication"
    required: false
    default: ""
  version:
    description: "The version to install, e.g. 12.4.3, blank for latest"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Cache firebase binary
      id: firebase-cache
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/bin/firebase
          ~/.cache/firebase/tools
        key: ${{ runner.os }}-firebase-tools-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-firebase-tools-
    - name: Install firebase-tools
      if: steps.firebase-cache.outputs.cache-hit != 'true'
      env:
        TOOLS_VERSION: ${{ inputs.version }}
      run: |
        if [ "$TOOLS_VERSION" == "" ]; then
          curl -sL firebase.tools | analytics=false upgrade=true bash
        else        
          curl -sL firebase.tools | sed "s/\/\$MACHINE\/latest/\/\$MACHINE\/v$TOOLS_VERSION/g" | analytics=false upgrade=true bash
        fi
      shell: bash
    - name: Update firebase-tools
      if: steps.firebase-cache.outputs.cache-hit == 'true'
      env:
        TOOLS_VERSION: ${{ inputs.version }}
      run: |
        if [ "$TOOLS_VERSION" == "" ]; then
          if [ `firebase is:npm view firebase-tools version` != `firebase --version` ]; then
            curl -sL firebase.tools | analytics=false upgrade=true bash
          fi
        else
          if [ "$TOOLS_VERSION" != `firebase --version` ]; then
             curl -sL firebase.tools | sed "s/\/\$MACHINE\/latest/\/\$MACHINE\/v$TOOLS_VERSION/g" | analytics=false upgrade=true bash
          fi
        fi
      shell: bash
    - name: Set service account
      if: "${{ inputs.serviceAccount != '' }}"
      run: |
        echo '${{ inputs.serviceAccount }}' > $RUNNER_TEMP/.firebase_service_account.json
        echo GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/.firebase_service_account.json >> $GITHUB_ENV
      shell: bash
